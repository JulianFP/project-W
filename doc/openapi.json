{"openapi": "3.1.0", "info": {"title": "Project-W", "summary": "Create transcripts of audio files (speech-to-text)!", "description": "\n## About Project-W\n\nProject-W is a platform for creating transcripts of audio files (speech-to-text). It leverages OpenAIs Whisper models for the transcription while providing an API and easy-to-use interface for users to create and manage transcription jobs.\n\nRefer to the [full documentation](https://project-w.readthedocs.io) for more information. You can also find the source code all of it's components on GitHub:\n- [Backend](https://github.com/julianFP/project-w)\n- [Frontend](https://github.com/julianFP/project-w-frontend)\n- [Runner](https://github.com/julianFP/project-w-runner)\n\nThe API is split into the following sections:\n\n### users\nFor regular users to manage their accounts\n\n### admins\nFor admin users to manage the server and all users on it\n\n### oidc, ldap and local_account\nDifferent authentication (login, signup, etc.) routes for different authentication backends\n\n### jobs\nSubmit new transcription jobs, manage existing ones\n", "license": {"name": "GNU Affero General Public License Version 3", "identifier": "AGPL-3.0-only", "url": "https://www.gnu.org/licenses/agpl-3.0.txt"}, "version": "0.3.0"}, "paths": {"/api/users/invalidate_token": {"delete": {"tags": ["users"], "summary": "Invalidate Token", "operationId": "invalidate_token_api_users_invalidate_token_delete", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "token_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Token Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Invalidate Token Api Users Invalidate Token Delete"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/users/invalidate_all_tokens": {"delete": {"tags": ["users"], "summary": "Invalidate All Tokens", "operationId": "invalidate_all_tokens_api_users_invalidate_all_tokens_delete", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Invalidate All Tokens Api Users Invalidate All Tokens Delete"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/users/get_new_api_token": {"post": {"tags": ["users"], "summary": "Get New Api Token", "operationId": "get_new_api_token_api_users_get_new_api_token_post", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "name", "in": "query", "required": true, "schema": {"type": "string", "maxLength": 64, "title": "Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Get New Api Token Api Users Get New Api Token Post"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "Creation of api tokens is disabled for your identity provider", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/users/get_all_token_info": {"get": {"tags": ["users"], "summary": "Get All Token Info", "operationId": "get_all_token_info_api_users_get_all_token_info_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TokenSecretInfo"}, "type": "array", "title": "Response Get All Token Info Api Users Get All Token Info Get"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/users/info": {"get": {"tags": ["users"], "summary": "Token Info", "operationId": "token_info_api_users_info_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DecodedAuthTokenData"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/users/info_db": {"get": {"tags": ["users"], "summary": "User Info", "operationId": "user_info_api_users_info_db_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/users/delete": {"delete": {"tags": ["users"], "summary": "Delete User", "operationId": "delete_user_api_users_delete_delete", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Delete User Api Users Delete Delete"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/admins/create_runner": {"post": {"tags": ["admins"], "summary": "Create Runner", "operationId": "create_runner_api_admins_create_runner_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RunnerCreatedInfo"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/admins/test": {"get": {"tags": ["admins"], "summary": "Admin Test", "operationId": "admin_test_api_admins_test_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Admin Test Api Admins Test Get"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/jobs/submit_settings": {"post": {"tags": ["jobs"], "summary": "Submit Settings", "operationId": "submit_settings_api_jobs_submit_settings_post", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "is_new_default", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Is New Default"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobSettings-Input"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Submit Settings Api Jobs Submit Settings Post"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/jobs/default_settings": {"get": {"tags": ["jobs"], "summary": "Get Default Settings", "operationId": "get_default_settings_api_jobs_default_settings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobSettings-Output"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/jobs/submit_job": {"post": {"tags": ["jobs"], "summary": "Submit Job", "operationId": "submit_job_api_jobs_submit_job_post", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "job_settings_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Job Settings Id"}}], "requestBody": {"required": true, "content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_submit_job_api_jobs_submit_job_post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Submit Job Api Jobs Submit Job Post"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "Not an audio file or provided job_settings_id was invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/jobs/count": {"get": {"tags": ["jobs"], "summary": "Job Count", "operationId": "job_count_api_jobs_count_get", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "exclude_finished", "in": "query", "required": true, "schema": {"type": "boolean", "title": "Exclude Finished"}}, {"name": "exclude_downloaded", "in": "query", "required": true, "schema": {"type": "boolean", "title": "Exclude Downloaded"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Job Count Api Jobs Count Get"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/jobs/get": {"get": {"tags": ["jobs"], "summary": "Get", "operationId": "get_api_jobs_get_get", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "start_index", "in": "query", "required": true, "schema": {"type": "integer", "title": "Start Index"}}, {"name": "end_index", "in": "query", "required": true, "schema": {"type": "integer", "title": "End Index"}}, {"name": "sort_key", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/JobSortKey"}}, {"name": "descending", "in": "query", "required": true, "schema": {"type": "boolean", "title": "Descending"}}, {"name": "exclude_finished", "in": "query", "required": true, "schema": {"type": "boolean", "title": "Exclude Finished"}}, {"name": "exclude_downloaded", "in": "query", "required": true, "schema": {"type": "boolean", "title": "Exclude Downloaded"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "integer"}, "title": "Response Get Api Jobs Get Get"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/jobs/info": {"get": {"tags": ["jobs"], "summary": "Job Info", "operationId": "job_info_api_jobs_info_get", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "job_ids", "in": "query", "required": true, "schema": {"type": "array", "items": {"type": "integer"}, "title": "Job Ids"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/JobInfo"}, "title": "Response Job Info Api Jobs Info Get"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/jobs/abort": {"post": {"tags": ["jobs"], "summary": "Abort Jobs", "operationId": "abort_jobs_api_jobs_abort_post", "requestBody": {"content": {"application/json": {"schema": {"items": {"type": "integer"}, "type": "array", "title": "Job Ids"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Abort Jobs Api Jobs Abort Post"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "At least one of jobs is not running", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/jobs/delete": {"delete": {"tags": ["jobs"], "summary": "Delete Jobs", "operationId": "delete_jobs_api_jobs_delete_delete", "requestBody": {"content": {"application/json": {"schema": {"items": {"type": "integer"}, "type": "array", "title": "Job Ids"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Delete Jobs Api Jobs Delete Delete"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "At least one of jobs is running", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/jobs/download_transcript": {"get": {"tags": ["jobs"], "summary": "Download Transcript", "operationId": "download_transcript_api_jobs_download_transcript_get", "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}], "parameters": [{"name": "job_id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Job Id"}}, {"name": "transcript_type", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/TranscriptTypeEnum"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"type": "string"}, {"type": "object", "additionalProperties": true}], "title": "Response Download Transcript Api Jobs Download Transcript Get"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of JWT token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Token doesn't grand enough permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "No job with that id exists or that job isn't finished", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/jobs/events": {"get": {"tags": ["jobs"], "summary": "Events", "operationId": "events_api_jobs_events_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/runners/register": {"post": {"tags": ["runners"], "summary": "Register", "description": "Registers the given runner as online.\nStarting from the registration, the runner must periodically send\nheartbeat requests to the manager, or it may be unregistered.", "operationId": "register_api_runners_register_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RunnerRegisterRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "integer", "title": "Response Register Api Runners Register Post"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "Runner already registered", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/runners/unregister": {"post": {"tags": ["runners"], "summary": "Unregister Runner", "description": "Unregisters an online runner.", "operationId": "unregister_runner_api_runners_unregister_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Unregister Runner Api Runners Unregister Post"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/runners/retrieve_job_info": {"get": {"tags": ["runners"], "summary": "Retrieve Job Info", "operationId": "retrieve_job_info_api_runners_retrieve_job_info_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RunnerJobInfoResponse"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "No job assigned or job not in database", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/runners/retrieve_job_audio": {"post": {"tags": ["runners"], "summary": "Retrieve Job Audio", "description": "For a given online runner, retrieves the job that it has been assigned.\nAdditionally, if the runner wasn't marked as processing the job yet, it\nmarks it as such. If the runner has not been assigned a job, it returns\nNone and does nothing.", "operationId": "retrieve_job_audio_api_runners_retrieve_job_audio_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "No job assigned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/runners/submit_job_result": {"post": {"tags": ["runners"], "summary": "Submit Job Result", "description": "Handles the submission of a job result by a runner. If the runner is not currently\nprocessing a job, returns an error message. Otherwise, marks the job as completed/failed\nby setting either the transcript or the error_msg field of the job, marks the runner as\navailable and returns None.", "operationId": "submit_job_result_api_runners_submit_job_result_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RunnerSubmitResultRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Submit Job Result Api Runners Submit Job Result Post"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "Runner not processing a job", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/runners/heartbeat": {"post": {"tags": ["runners"], "summary": "Heartbeat", "operationId": "heartbeat_api_runners_heartbeat_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HeartbeatRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HeartbeatResponse"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/about": {"get": {"summary": "About", "operationId": "about_api_about_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AboutResponse"}}}}}}}, "/api/auth_settings": {"get": {"summary": "Auth Settings", "operationId": "auth_settings_api_auth_settings_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthSettings"}}}}}}}, "/api/oidc/login/{idp_name}": {"get": {"tags": ["oidc"], "summary": "Oidc-Redirect", "operationId": "oidc_redirect_api_oidc_login__idp_name__get", "parameters": [{"name": "idp_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Idp Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/oidc/auth/{idp_name}": {"get": {"tags": ["oidc"], "summary": "Oidc-Auth", "operationId": "oidc_auth_api_oidc_auth__idp_name__get", "parameters": [{"name": "idp_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Idp Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "400": {"description": "Could not authorize IdP access token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"headers": {"WWW-Authenticate": {"type": "string"}}, "description": "Validation error of id_token", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Not enough information or missing scope", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/ldap/login/{idp_name}": {"post": {"tags": ["ldap"], "summary": "Login", "operationId": "login_api_ldap_login__idp_name__post", "parameters": [{"name": "idp_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Idp Name"}}], "requestBody": {"required": true, "content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login_api_ldap_login__idp_name__post"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Login Api Ldap Login  Idp Name  Post"}}}}, "400": {"description": "idp_name is invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication was unsuccessful", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/local-account/login": {"post": {"tags": ["local-account"], "summary": "Login", "operationId": "login_api_local_account_login_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login_api_local_account_login_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Login Api Local Account Login Post"}}}}, "401": {"description": "Authentication was unsuccessful", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/local-account/signup": {"post": {"tags": ["local-account"], "summary": "Signup", "operationId": "signup_api_local_account_signup_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SignupData"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Signup Api Local Account Signup Post"}}}}, "400": {"description": "Email or password have invalid syntax", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "405": {"description": "Signup of new accounts is disabled on this server", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/local-account/activate": {"post": {"tags": ["local-account"], "summary": "Activate", "operationId": "activate_api_local_account_activate_post", "parameters": [{"name": "token", "in": "query", "required": true, "schema": {"type": "string", "writeOnly": true, "format": "password", "title": "Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Activate Api Local Account Activate Post"}}}}, "400": {"description": "Activation token doesn't match any user, or user has already been activated", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Activation token invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/local-account/resend_activation_email": {"get": {"tags": ["local-account"], "summary": "Resend Activation Email", "operationId": "resend_activation_email_api_local_account_resend_activation_email_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Resend Activation Email Api Local Account Resend Activation Email Get"}}}}, "400": {"description": "User is not a local Project-W user or has been provisioned through the config file", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/local-account/request_password_reset": {"get": {"tags": ["local-account"], "summary": "Request Password Reset", "operationId": "request_password_reset_api_local_account_request_password_reset_get", "parameters": [{"name": "email", "in": "query", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Request Password Reset Api Local Account Request Password Reset Get"}}}}, "400": {"description": "Email invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/local-account/reset_password": {"post": {"tags": ["local-account"], "summary": "Reset Password", "operationId": "reset_password_api_local_account_reset_password_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PasswordResetData"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Reset Password Api Local Account Reset Password Post"}}}}, "400": {"description": "Password reset token doesn't match any user", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Password reset token invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/local-account/change_user_email": {"post": {"tags": ["local-account"], "summary": "Change User Email", "operationId": "change_user_email_api_local_account_change_user_email_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_change_user_email_api_local_account_change_user_email_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Change User Email Api Local Account Change User Email Post"}}}}, "400": {"description": "User is not a local Project-W user or has been provisioned through the config file", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}, "/api/local-account/change_user_password": {"post": {"tags": ["local-account"], "summary": "Change User Password", "operationId": "change_user_password_api_local_account_change_user_password_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_change_user_password_api_local_account_change_user_password_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Change User Password Api Local Account Change User Password Post"}}}}, "403": {"description": "Token doesn't grand enough permissions", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "400": {"description": "User is not a local Project-W user or has been provisioned through the config file", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Validation error of JWT token", "headers": {"WWW-Authenticate": {"type": "string"}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWT token (from local account, oidc or ldap auth) or runner token": []}]}}}, "components": {"schemas": {"AboutResponse": {"properties": {"description": {"type": "string", "title": "Description"}, "source_code": {"type": "string", "title": "Source Code"}, "version": {"type": "string", "title": "Version"}, "imprint": {"anyOf": [{"$ref": "#/components/schemas/ImprintSettings"}, {"type": "null"}]}}, "type": "object", "required": ["description", "source_code", "version", "imprint"], "title": "AboutResponse"}, "AlignmentProcessingSettings": {"properties": {"highlight_words": {"type": "boolean", "title": "Highlight Words", "default": false}, "max_line_count": {"anyOf": [{"type": "integer", "minimum": 1.0}, {"type": "null"}], "title": "Max Line Count"}, "max_line_width": {"anyOf": [{"type": "integer", "minimum": 1.0}, {"type": "null"}], "title": "Max Line Width"}}, "type": "object", "title": "AlignmentProcessingSettings"}, "AlignmentSettings": {"properties": {"processing": {"$ref": "#/components/schemas/AlignmentProcessingSettings", "default": {"highlight_words": false}}, "return_char_alignments": {"type": "boolean", "title": "Return Char Alignments", "default": false}, "interpolate_method": {"$ref": "#/components/schemas/InterpolateMethodEnum", "default": "nearest"}}, "type": "object", "title": "AlignmentSettings"}, "AsrSettings": {"properties": {"beam_size": {"type": "integer", "minimum": 1.0, "title": "Beam Size", "default": 5}, "patience": {"type": "number", "exclusiveMinimum": 0.0, "title": "Patience", "default": 1.0}, "length_penalty": {"type": "number", "maximum": 1.0, "minimum": 0.0, "title": "Length Penalty", "default": 1.0}, "temperature": {"type": "number", "minimum": 0.0, "title": "Temperature", "default": 0.0}, "temperature_increment_on_fallback": {"type": "number", "minimum": 0.0, "title": "Temperature Increment On Fallback", "default": 0.2}, "compression_ratio_threshold": {"type": "number", "minimum": 0.0, "title": "Compression Ratio Threshold", "default": 2.4}, "log_prob_threshold": {"type": "number", "title": "Log Prob Threshold", "default": -1.0}, "no_speech_threshold": {"type": "number", "title": "No Speech Threshold", "default": 0.6}, "initial_prompt": {"anyOf": [{"type": "string", "maxLength": 2000}, {"type": "null"}], "title": "Initial Prompt"}, "suppress_tokens": {"items": {"type": "integer"}, "type": "array", "title": "Suppress Tokens", "default": [-1]}, "suppress_numerals": {"type": "boolean", "title": "Suppress Numerals", "default": false}}, "type": "object", "title": "AsrSettings"}, "AuthSettings": {"properties": {"local_account": {"$ref": "#/components/schemas/LocalAccountSettingsBase"}, "oidc_providers": {"additionalProperties": {"$ref": "#/components/schemas/ProviderSettingsBase"}, "type": "object", "title": "Oidc Providers"}, "ldap_providers": {"additionalProperties": {"$ref": "#/components/schemas/ProviderSettingsBase"}, "type": "object", "title": "Ldap Providers"}}, "type": "object", "required": ["local_account", "oidc_providers", "ldap_providers"], "title": "AuthSettings"}, "Body_change_user_email_api_local_account_change_user_email_post": {"properties": {"new_email": {"$ref": "#/components/schemas/EmailValidated"}, "password": {"type": "string", "format": "password", "title": "Password", "writeOnly": true}}, "type": "object", "required": ["new_email", "password"], "title": "Body_change_user_email_api_local_account_change_user_email_post"}, "Body_change_user_password_api_local_account_change_user_password_post": {"properties": {"new_password": {"$ref": "#/components/schemas/PasswordValidated"}, "password": {"type": "string", "format": "password", "title": "Password", "writeOnly": true}}, "type": "object", "required": ["new_password", "password"], "title": "Body_change_user_password_api_local_account_change_user_password_post"}, "Body_login_api_ldap_login__idp_name__post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login_api_ldap_login__idp_name__post"}, "Body_login_api_local_account_login_post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login_api_local_account_login_post"}, "Body_submit_job_api_jobs_submit_job_post": {"properties": {"audio_file": {"type": "string", "format": "binary", "title": "Audio File"}}, "type": "object", "required": ["audio_file"], "title": "Body_submit_job_api_jobs_submit_job_post"}, "DecodedAuthTokenData": {"properties": {"user_type": {"$ref": "#/components/schemas/UserTypeEnum"}, "sub": {"type": "string", "title": "Sub"}, "email": {"$ref": "#/components/schemas/EmailValidated"}, "is_verified": {"type": "boolean", "title": "Is Verified"}, "token_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Token Id"}, "is_admin": {"type": "boolean", "title": "Is Admin"}, "iss": {"type": "string", "title": "Iss"}}, "type": "object", "required": ["user_type", "sub", "email", "is_verified", "is_admin", "iss"], "title": "DecodedAuthTokenData"}, "DiarizationSettings": {"properties": {"min_speakers": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Min Speakers"}, "max_speakers": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Max Speakers"}}, "type": "object", "title": "DiarizationSettings"}, "EmailValidated": {"type": "string", "title": "EmailValidated"}, "ErrorResponse": {"properties": {"detail": {"type": "string", "title": "Detail"}}, "type": "object", "required": ["detail"], "title": "ErrorResponse", "example": {"detail": "error message"}}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "HeartbeatRequest": {"properties": {"progress": {"type": "number", "maximum": 100.0, "minimum": 0.0, "title": "Progress", "default": 0.0}}, "type": "object", "title": "HeartbeatRequest"}, "HeartbeatResponse": {"properties": {"abort": {"type": "boolean", "title": "Abort", "default": false}, "job_assigned": {"type": "boolean", "title": "Job Assigned", "default": false}}, "type": "object", "title": "HeartbeatResponse"}, "ImprintSettings": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the person/institution hosting this instance"}, "email": {"$ref": "#/components/schemas/EmailValidated", "description": "The contact email address of the person/institution hosting this instance"}, "additional_imprint_html": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Additional Imprint Html", "description": "Content of the imprint in addition to the other fields"}}, "additionalProperties": false, "type": "object", "required": ["name", "email"], "title": "ImprintSettings"}, "InterpolateMethodEnum": {"type": "string", "enum": ["nearest", "linear", "ignore"], "title": "InterpolateMethodEnum"}, "JobInfo": {"properties": {"id": {"type": "integer", "title": "Id"}, "progress": {"type": "number", "maximum": 100.0, "minimum": 0.0, "title": "Progress", "default": 0.0}, "abort": {"type": "boolean", "title": "Abort", "default": false}, "creation_timestamp": {"type": "string", "format": "date-time", "title": "Creation Timestamp"}, "file_name": {"type": "string", "title": "File Name"}, "finish_timestamp": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Finish Timestamp"}, "runner_name": {"anyOf": [{"type": "string", "maxLength": 40}, {"type": "null"}], "title": "Runner Name"}, "runner_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Runner Id"}, "runner_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Runner Version"}, "runner_git_hash": {"anyOf": [{"type": "string", "maxLength": 40}, {"type": "null"}], "title": "Runner Git Hash"}, "runner_source_code_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Runner Source Code Url"}, "downloaded": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Downloaded"}, "error_msg": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Msg"}, "settings": {"$ref": "#/components/schemas/JobSettings-Output", "default": {"task": "transcribe", "model": "large", "alignment": {"interpolate_method": "nearest", "processing": {"highlight_words": false}, "return_char_alignments": false}, "vad_settings": {"chunk_size": 30, "vad_offset": 0.363, "vad_onset": 0.5}, "asr_settings": {"beam_size": 5, "compression_ratio_threshold": 2.4, "length_penalty": 1.0, "log_prob_threshold": -1.0, "no_speech_threshold": 0.6, "patience": 1.0, "suppress_numerals": false, "suppress_tokens": [-1], "temperature": 0.0, "temperature_increment_on_fallback": 0.2}, "email_notification": false}}, "step": {"$ref": "#/components/schemas/JobStatus"}}, "type": "object", "required": ["id", "creation_timestamp", "file_name", "finish_timestamp", "runner_name", "runner_id", "runner_version", "runner_git_hash", "runner_source_code_url", "downloaded", "error_msg", "step"], "title": "JobInfo"}, "JobLangEnum": {"type": "string", "enum": ["af", "am", "ar", "as", "az", "ba", "be", "bg", "bn", "bo", "br", "bs", "ca", "cs", "cy", "da", "de", "el", "en", "es", "et", "eu", "fa", "fi", "fo", "fr", "gl", "gu", "ha", "haw", "he", "hi", "hr", "ht", "hu", "hy", "id", "is", "it", "ja", "jw", "ka", "kk", "km", "kn", "ko", "la", "lb", "ln", "lo", "lt", "lv", "mg", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "ne", "nl", "nn", "no", "oc", "pa", "pl", "ps", "pt", "ro", "ru", "sa", "sd", "si", "sk", "sl", "sn", "so", "sq", "sr", "su", "sv", "sw", "ta", "te", "tg", "th", "tk", "tl", "tr", "tt", "uk", "ur", "uz", "vi", "yi", "yo", "yue", "zh"], "title": "JobLangEnum"}, "JobModelEnum": {"type": "string", "enum": ["tiny", "tiny.en", "base", "base.en", "small", "small.en", "medium", "medium.en", "turbo", "large"], "title": "JobModelEnum"}, "JobSettings-Input": {"properties": {"task": {"$ref": "#/components/schemas/TaskEnum", "default": "transcribe"}, "model": {"$ref": "#/components/schemas/JobModelEnum", "default": "large"}, "language": {"anyOf": [{"$ref": "#/components/schemas/JobLangEnum"}, {"type": "null"}]}, "alignment": {"anyOf": [{"$ref": "#/components/schemas/AlignmentSettings"}, {"type": "null"}], "default": {"processing": {"highlight_words": false}, "return_char_alignments": false, "interpolate_method": "nearest"}}, "diarization": {"anyOf": [{"$ref": "#/components/schemas/DiarizationSettings"}, {"type": "null"}]}, "vad_settings": {"$ref": "#/components/schemas/VadSettings", "default": {"vad_onset": 0.5, "vad_offset": 0.363, "chunk_size": 30}}, "asr_settings": {"$ref": "#/components/schemas/AsrSettings", "default": {"beam_size": 5, "patience": 1.0, "length_penalty": 1.0, "temperature": 0.0, "temperature_increment_on_fallback": 0.2, "compression_ratio_threshold": 2.4, "log_prob_threshold": -1.0, "no_speech_threshold": 0.6, "suppress_tokens": [-1], "suppress_numerals": false}}, "email_notification": {"type": "boolean", "title": "Email Notification", "default": false}}, "type": "object", "title": "JobSettings"}, "JobSettings-Output": {"properties": {"task": {"$ref": "#/components/schemas/TaskEnum", "default": "transcribe"}, "model": {"$ref": "#/components/schemas/JobModelEnum", "default": "large"}, "language": {"anyOf": [{"$ref": "#/components/schemas/JobLangEnum"}, {"type": "null"}]}, "alignment": {"anyOf": [{"$ref": "#/components/schemas/AlignmentSettings"}, {"type": "null"}], "default": {"processing": {"highlight_words": false}, "return_char_alignments": false, "interpolate_method": "nearest"}}, "diarization": {"anyOf": [{"$ref": "#/components/schemas/DiarizationSettings"}, {"type": "null"}]}, "vad_settings": {"$ref": "#/components/schemas/VadSettings", "default": {"vad_onset": 0.5, "vad_offset": 0.363, "chunk_size": 30}}, "asr_settings": {"$ref": "#/components/schemas/AsrSettings", "default": {"beam_size": 5, "patience": 1.0, "length_penalty": 1.0, "temperature": 0.0, "temperature_increment_on_fallback": 0.2, "compression_ratio_threshold": 2.4, "log_prob_threshold": -1.0, "no_speech_threshold": 0.6, "suppress_tokens": [-1], "suppress_numerals": false}}, "email_notification": {"type": "boolean", "title": "Email Notification", "default": false}}, "type": "object", "title": "JobSettings"}, "JobSettingsBase": {"properties": {"task": {"$ref": "#/components/schemas/TaskEnum", "default": "transcribe"}, "model": {"$ref": "#/components/schemas/JobModelEnum", "default": "large"}, "language": {"anyOf": [{"$ref": "#/components/schemas/JobLangEnum"}, {"type": "null"}]}, "alignment": {"anyOf": [{"$ref": "#/components/schemas/AlignmentSettings"}, {"type": "null"}], "default": {"processing": {"highlight_words": false}, "return_char_alignments": false, "interpolate_method": "nearest"}}, "diarization": {"anyOf": [{"$ref": "#/components/schemas/DiarizationSettings"}, {"type": "null"}]}, "vad_settings": {"$ref": "#/components/schemas/VadSettings", "default": {"vad_onset": 0.5, "vad_offset": 0.363, "chunk_size": 30}}, "asr_settings": {"$ref": "#/components/schemas/AsrSettings", "default": {"beam_size": 5, "patience": 1.0, "length_penalty": 1.0, "temperature": 0.0, "temperature_increment_on_fallback": 0.2, "compression_ratio_threshold": 2.4, "log_prob_threshold": -1.0, "no_speech_threshold": 0.6, "suppress_tokens": [-1], "suppress_numerals": false}}}, "type": "object", "title": "JobSettingsBase"}, "JobSortKey": {"type": "string", "enum": ["creation_time", "filename"], "title": "JobSortKey"}, "JobStatus": {"type": "string", "enum": ["not_queued", "pending_runner", "runner_assigned", "runner_in_progress", "success", "failed", "downloaded"], "title": "JobStatus", "description": "Represents all the possible statuses that a\njob request might have."}, "LocalAccountOperationModeEnum": {"type": "string", "enum": ["disabled", "no-signup_hidden", "no-signup", "enabled"], "title": "LocalAccountOperationModeEnum"}, "LocalAccountSettingsBase": {"properties": {"mode": {"$ref": "#/components/schemas/LocalAccountOperationModeEnum", "description": "\n        To what extend local accounts should be enabled.\n        - enabled: Both login and signup possible and advertised in frontend to users (default).\n        - no_signup: Login possible and advertised to users, signup not. Thus users can only login using already existing accounts (created through provisioning or by signup before this setting was set). Use this for example if you want users to login using local accounts that you created for them through provisioning.\n        - no_signup_hidden: Login still possible but not advertised to users in the frontend. Especially helpful if the only local accounts should be provisioned admin accounts for administration purposes while normal users should only login using oidc or ldap accounts.\n        - disabled: no login, no signup, no provisioned accounts. Login only through ldap and oidc. Please note that in this case you need to provide admin accounts through ldap or oidc as well!\n        ", "default": "enabled"}, "allowed_email_domains": {"items": {"type": "string", "pattern": "^([a-zA-Z0-9\\-]+\\.)+[a-zA-Z0-9\\-]+$", "description": "Allowed domains in email addresses. Users will only be able to sign up/change their email of their local accounts if their email address uses one of these domains (the part after the '@'). If left empty, then all email domains are allowed.", "examples": ["uni-heidelberg.de", "stud.uni-heidelberg.de"]}, "type": "array", "title": "Allowed Email Domains", "default": []}, "allow_creation_of_api_tokens": {"type": "boolean", "title": "Allow Creation Of Api Tokens", "description": "If set to true then users logged in with local accounts can create api tokens with infinite lifetime. They will get invalidated if the user gets deleted.", "default": true}}, "type": "object", "title": "LocalAccountSettingsBase"}, "PasswordResetData": {"properties": {"token": {"type": "string", "format": "password", "title": "Token", "writeOnly": true}, "new_password": {"$ref": "#/components/schemas/PasswordValidated"}}, "type": "object", "required": ["token", "new_password"], "title": "PasswordResetData"}, "PasswordValidated": {"type": "string", "format": "password", "title": "PasswordValidated", "writeOnly": true}, "ProviderSettingsBase": {"properties": {"hidden": {"type": "boolean", "title": "Hidden", "description": "Whether this provider should not be advertised to the user on the frontend. Useful if this provider should only provide admin accounts.", "default": false}, "icon_url": {"anyOf": [{"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri"}, {"type": "null"}], "title": "Icon Url", "description": "URL to a square icon that will be shown to the user in the frontend next to the 'Login with <name>' to visually represent the account/identity provider. Should be a link to a square png with transparent background, or alternatively to a svg", "examples": ["https://ssl.gstatic.com/images/branding/googleg/2x/googleg_standard_color_64dp.png"]}, "allow_creation_of_api_tokens": {"type": "boolean", "title": "Allow Creation Of Api Tokens", "description": "If set to true then users logged in from this identity provider can create api tokens with infinite lifetime. These tokens will not be automatically invalidated if the user gets deleted or looses permissions in the identity provider. This means that with this setting enabled, users that ones have access to Project-W can retain that access possibly forever. Consider if this is a problem for you before enabling this!", "default": false}}, "type": "object", "title": "ProviderSettingsBase"}, "RunnerCreatedInfo": {"properties": {"id": {"type": "integer", "title": "Id"}, "token": {"type": "string", "title": "Token"}}, "type": "object", "required": ["id", "token"], "title": "RunnerCreatedInfo"}, "RunnerJobInfoResponse": {"properties": {"id": {"type": "integer", "title": "Id"}, "settings": {"$ref": "#/components/schemas/JobSettingsBase"}}, "type": "object", "required": ["id", "settings"], "title": "RunnerJobInfoResponse"}, "RunnerRegisterRequest": {"properties": {"name": {"type": "string", "maxLength": 40, "title": "Name"}, "version": {"type": "string", "title": "Version"}, "git_hash": {"type": "string", "maxLength": 40, "title": "Git Hash"}, "source_code_url": {"type": "string", "title": "Source Code Url"}, "priority": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Priority"}}, "type": "object", "required": ["name", "version", "git_hash", "source_code_url", "priority"], "title": "RunnerRegisterRequest"}, "RunnerSubmitResultRequest": {"properties": {"error_msg": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Msg"}, "transcript": {"anyOf": [{"$ref": "#/components/schemas/Transcript"}, {"type": "null"}]}}, "type": "object", "title": "RunnerSubmitResultRequest"}, "SignupData": {"properties": {"email": {"$ref": "#/components/schemas/EmailValidated"}, "password": {"$ref": "#/components/schemas/PasswordValidated"}}, "type": "object", "required": ["email", "password"], "title": "SignupData"}, "TaskEnum": {"type": "string", "enum": ["transcribe", "translate"], "title": "TaskEnum"}, "TokenSecretInfo": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"anyOf": [{"type": "string", "maxLength": 64}, {"type": "null"}], "title": "Name"}, "temp_token_secret": {"type": "boolean", "title": "Temp Token Secret"}}, "type": "object", "required": ["id", "name", "temp_token_secret"], "title": "TokenSecretInfo"}, "Transcript": {"properties": {"as_txt": {"type": "string", "title": "As Txt"}, "as_srt": {"type": "string", "title": "As Srt"}, "as_tsv": {"type": "string", "title": "As Tsv"}, "as_vtt": {"type": "string", "title": "As Vtt"}, "as_json": {"additionalProperties": true, "type": "object", "title": "As Json"}}, "type": "object", "required": ["as_txt", "as_srt", "as_tsv", "as_vtt", "as_json"], "title": "Transcript"}, "TranscriptTypeEnum": {"type": "string", "enum": ["as_txt", "as_srt", "as_tsv", "as_vtt", "as_json"], "title": "TranscriptTypeEnum"}, "User": {"properties": {"id": {"type": "integer", "title": "Id"}, "email": {"$ref": "#/components/schemas/EmailValidated"}, "provider_name": {"type": "string", "title": "Provider Name"}, "user_type": {"$ref": "#/components/schemas/UserTypeEnum"}, "is_admin": {"type": "boolean", "title": "Is Admin"}, "is_verified": {"type": "boolean", "title": "Is Verified"}}, "type": "object", "required": ["id", "email", "provider_name", "user_type", "is_admin", "is_verified"], "title": "User"}, "UserTypeEnum": {"type": "string", "enum": ["local", "ldap", "oidc"], "title": "UserTypeEnum"}, "VadSettings": {"properties": {"vad_onset": {"type": "number", "maximum": 1.0, "minimum": 0.0, "title": "Vad Onset", "default": 0.5}, "vad_offset": {"type": "number", "maximum": 1.0, "minimum": 0.0, "title": "Vad Offset", "default": 0.363}, "chunk_size": {"type": "integer", "maximum": 30.0, "minimum": 1.0, "title": "Chunk Size", "default": 30}}, "type": "object", "title": "VadSettings"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"JWT token (from local account, oidc or ldap auth) or runner token": {"type": "http", "description": "\n    A valid JWT token returned by one of the following login routes:\n    - local account: /local-account/login\n    - oidc: /oidc/login/{idp_name}\n    - ldap: /ldap/login/{idp_name}\n    Which of these are available with what idp's depends on the server configuration\n    For the /runners/ routes you need to obtain a runner token from the /admins/create_runner route\n    ", "scheme": "bearer", "bearerFormat": "Bearer"}}}}
