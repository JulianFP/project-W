# This section describes the requirements of the build/installation
# process itself. Being able to do this was the original reason to
# introduce pyproject.toml
[build-system]
requires = [
    "setuptools >=61",
    "setuptools_scm >=7",
]
build-backend = "setuptools.build_meta"

# This section provides general project metadata that is used across
# a variety of build tools. Notably, the version specified here is the
# single source of truth for project_W's version
[project]
name = "project_W"
description = "Add short description here"
readme = "README.md"
maintainers = [
    { name = "Julian Partanen", email = "your@email.com" },
    { name = "Markus Everling", email = "your@email.com"}
]
dynamic = ["version"]
requires-python = ">=3.11"
license = { text = "AGPLv3" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU Affero General Public License v3",
]
dependencies = [
    # click cli to pass some hosting options to application which shouldn't be part of config file,
    "click",
    # Argon2 for password hashing
    "argon2-cffi",
    # Fastapi and validation libraries
    "fastapi",
    "pydantic",
    "email-validator",
    # Postgres client library
    "psycopg[binary,pool]",
    # Redis client library
    "redis",
    # auth & security stuff
    "authlib",
    "pyjwt",
    "itsdangerous", #required by starlette's SessionMiddleware
    "bonsai",
    # async smtp library
    "aiosmtplib",
    # for deployment
    "granian[pname]",
    # for multipart streaming
    "python-multipart",
    # for making http requests to OIDC provider
    "httpx",
    # getting platform-independent directories for config and data (follows xdg standard on Linux)
    "platformdirs",
    # parsing config from yaml file and env vars
    "pyaml_env",
]

[project.optional-dependencies]
development_mode = [
    # granian extra packages
    "granian[pname,reload]",
]
docs = [
    #sphinx documentation engine
    "sphinx",
    #for automatically documenting http apis
    "sphinxcontrib-httpdomain",
    #for automatically documenting jsonschemas (like the one for our config)
    "sphinx-jsonschema",
    #for including markdown files in sphinx documentation (like the README)
    "sphinx_mdinclude",
    #read the docs theme for sphinx
    "sphinx_rtd_theme",
]

# Command line scripts installed as part of the installation
[project.scripts]
project_W = "project_W.__main__:main"

# The following section contains setuptools-specific configuration
# options. For a full reference of available options, check the overview
# at https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
packages = [
    "project_W",
]

# Configure setuptools_scm, which extracts the version number from
# the version control system. For more information see its documentation:
# https://github.com/pypa/setuptools_scm
[tool.setuptools_scm]
version_scheme = "python-simplified-semver"
local_scheme = "node-and-date"
version_file = "project_W/_version.py"
