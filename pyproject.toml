# This section describes the requirements of the build/installation
# process itself. Being able to do this was the original reason to
# introduce pyproject.toml
[build-system]
requires = [
    "setuptools >=61",
    "setuptools_scm >=7",
]
build-backend = "setuptools.build_meta"

# This section provides general project metadata that is used across
# a variety of build tools. Notably, the version specified here is the
# single source of truth for project_W's version
[project]
name = "project_W"
description = "Add short description here"
readme = "README.md"
maintainers = [
    { name = "Julian Partanen", email = "your@email.com" },
]
dynamic = ["version"]
requires-python = ">=3.8"
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    # Argon2 for password hashing
    "argon2-cffi",
    # Click for the CLI
    "click",
    # Flask for the WSGI server
    "flask",
    # JWT Flask plugin for session tokens
    "flask-jwt-extended",
    # SQL Flask plugin for database management
    "flask-sqlalchemy",
    # getting platform-independent directories for config and data (follows xdg standard on Linux)
    "platformdirs",
    # parsing config from yaml file and env vars
    "pyaml_env",
    #validating config files and filling out defaults
    "jsonschema"
]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "nbval",
]
docs = [
    "ipykernel",
    "nbsphinx",
    "nbsphinx-link",
    "sphinx",
    "sphinx_mdinclude",
    "sphinx_rtd_theme",
]

# Command line scripts installed as part of the installation
[project.scripts]
project_W = "project_W.__main__:main"

# The following section contains setuptools-specific configuration
# options. For a full reference of available options, check the overview
# at https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
packages = [
    "project_W",
]

# Configure setuptools_scm, which extracts the version number from
# the version control system. For more information see its documentation:
# https://github.com/pypa/setuptools_scm
[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "node-and-date"
write_to = "project_W/_version.py"

# The following is the configuration for the pytest test suite
[tool.pytest.ini_options]
testpaths = [
    "tests",
    "notebooks",
]
